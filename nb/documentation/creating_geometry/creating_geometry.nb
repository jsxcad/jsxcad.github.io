md`
# Creating Geometry
One of the core functions of JSxCAD is creating geometry and a number of primitives and helper functions are provided to make creating new geometry easier. Generally geometry primitives are provided in the form thing(x axis diameter, y axis diameter, z axis height) where the second two are optional.

---
### Arc
Create a circle or a section of a an arc. The number of sides can be computed automatically to limit maximum deviation from the ideal circle using .hasZag(deviation).
`;

const aCircle = Arc(10).view();

const anElipseExtruded = Arc(10, 5, 2).view();

const aCircleWithSides = Arc(10).hasSides(8).view();

const aCircleWithZag = Arc(20).hasZag(0.1).view();

md`
---
### Box
Creates a 2D or 3D box
`;

Box(10, 10).view();

Box(10, 10, 2).view();

md`
---
### Curve
Create a bezier curve. The number of segments is scaled automatically to match the curvature.
`;

Curve(Point(0, 0), Point(10, 10), Point(20, 30), Point(40, 0)).view();

Curve([0, 0], [10, 0], [10, 10], [20, 10])
  .rx(1 / 4)
  .eachEdge(ArcX(0, 4, 4).hasSides(6), Loft)
  .view();

md`
---
### Empty
Creates a new empty geometry
`;

Empty().view();

md`
---
### Hexagon
Creates a new hexagon
`;

Hexagon(4).view();

Hexagon(6, 3, 2).view();

md`
---
### Hershy
A built in single line font useful for adding text
`;

Hershey('Some Example Text', 20).by(align('xy')).view();

md`
---
### Icosahedron
Creates a new Icosahedron
`;

Icosahedron(10).view();

md`
---
### Line
Creates a new line
`;

Line(10).view();

md`
---
### Link
Links a set of ordered points together into ordered segments.
`;

Group(Point(0, 0), Point(10, 10), Point(20, 10)).link().view();

Arc(10)
  .hasAngle(-1 / 3, 1 / 3)
  .x(-3, 3)
  .link()
  .view();

md`
---
### Loop
Loop is very similar to link, except that the last point is connected back to the first point.
`;

Group(Point(0, 0), Point(10, 10), Point(20, 10)).loop().view();

md`
---
### Octagon
Creates a new Octagon
`;

Octagon(20).view();

md`
---
### Orb
Creates a new spheroid
`;

Orb(10).view();
Orb(10, 5, 2).view();

md`
---
### Pentagon
Generates a pentagon
`;

Pentagon(10).view();

md`
---
### Point
A point in 3D space
`;

Point(0, 0, 0).view();

md`
---
### Polygon
Creates a new polygon from the input points
`;

Polygon(Point(0, 0, 0), Point(10, 0, 0), Point(10, 10, 0)).view();

Polygon([0, 0, 0], [10, 0, 0], [10, 10, 0]).view();

md`
---
### Triangle
Triangle creates a new triangle.
`;

Triangle(4, 9).view();
